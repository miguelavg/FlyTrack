/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.simulacion;

import beans.Aeropuerto;
import controllers.CAeropuerto;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Stroke;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import logic.AeroLite;
import logic.EnvioLite;
import logic.VueloLite;

/**
 *
 * @author ronald
 */
public class MonitoreoFrame extends javax.swing.JDialog {

    /**
     * Creates new form MonitoreoFrame
     */
    ArrayList<AeroLite> aerolites;
    ArrayList<VueloLite> vuelolites;
    ArrayList<EnvioLite> enviolites;

    public MonitoreoFrame(ArrayList<AeroLite> aerolites, ArrayList<VueloLite> vuelolites, ArrayList<EnvioLite> enviolites) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.aerolites = aerolites;
        this.vuelolites = vuelolites;
        this.enviolites = enviolites;
    }

    @Override
    protected JRootPane createRootPane() {
        JRootPane rootPane = new JRootPane();
        KeyStroke strokeESC = KeyStroke.getKeyStroke("ESCAPE");
        Action actionListener = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                setVisible(Boolean.FALSE);
                dispose();
            }
        };
        InputMap inputMap = rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(strokeESC, "ESCAPE");
        rootPane.getActionMap().put("ESCAPE", actionListener);

        return rootPane;
    }

    public Aeropuerto ShowDialog() {
        pintar(this.getGraphics());
        setVisible(true);
        dispose();
        return null;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        pintar(g);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_mapa = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FlyTrack - Ubicar aeropuerto");
        setMinimumSize(new java.awt.Dimension(1024, 582));
        setModal(true);
        setResizable(false);

        lbl_mapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/world-map.png"))); // NOI18N
        lbl_mapa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_mapaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_mapa)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbl_mapa, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbl_mapaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_mapaMouseClicked
        // TODO add your handling code here:
        pintar(this.getGraphics());
    }//GEN-LAST:event_lbl_mapaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonitoreoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonitoreoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonitoreoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonitoreoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonitoreoFrame(null, null, null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbl_mapa;
    // End of variables declaration//GEN-END:variables

    private void pintar(Graphics g) {

        Graphics2D c = (Graphics2D) g;

        Stroke stroke = new BasicStroke(2.0f);
        c.setStroke(stroke);

        for (VueloLite v : vuelolites) {
            if (v.isPintar_rojo()) {
                c.setColor(Color.RED);
                c.drawLine(v.getOrigen().getX(), v.getOrigen().getY(), v.getDestino().getX(), v.getDestino().getY());
            }
        }

        for (EnvioLite e : enviolites) {
            if (e.isPintar_rojo()) {
                c.setColor(Color.RED);
                c.drawLine(e.getOrigen().getX(), e.getOrigen().getY(), e.getDestino().getX(), e.getDestino().getY());
                if (!e.getOrigen().isPintar_rojo()) {
                    c.setColor(Color.GREEN);
                } else {
                    c.setColor(Color.RED);
                }

                c.drawString(e.getOrigen().getNombre(), e.getOrigen().getX() + 15, e.getOrigen().getY());
                c.fillOval(e.getOrigen().getX() - 5, e.getOrigen().getY() - 5, 10, 10);
                c.drawOval(e.getOrigen().getX() - 5, e.getOrigen().getY() - 5, 10, 10);

                if (!e.getDestino().isPintar_rojo()) {
                    c.setColor(Color.GREEN);
                } else {
                    c.setColor(Color.RED);
                }

                c.drawString(e.getDestino().getNombre(), e.getDestino().getX() + 15, e.getDestino().getY());
                c.fillOval(e.getDestino().getX() - 5, e.getDestino().getY() - 5, 10, 10);
                c.drawOval(e.getDestino().getX() - 5, e.getDestino().getY() - 5, 10, 10);
            }

        }

        for (AeroLite a : aerolites) {
            if (a.isPintar_rojo()) {
                c.setColor(Color.RED);
                c.drawString(a.getNombre(), a.getX() + 15, a.getY());
                c.fillOval(a.getX() - 5, a.getY() - 5, 10, 10);
                c.drawOval(a.getX() - 5, a.getY() - 5, 10, 10);
            }
        }
    }
}
