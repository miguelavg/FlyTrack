/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.administracion.vuelos;

import beans.Parametro;
import beans.Vuelo;
import controllers.CAeropuerto;
import controllers.CParametro;
import controllers.CSerializer;
import controllers.CValidator;
import controllers.CVuelo;
import gui.ErrorDialog;
import gui.InformationDialog;
import java.awt.Cursor;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import xml.XmlVuelo;
import xml.xmlVueloString;

/**
 *
 * @author jugox
 */
public class VuelosCarga extends javax.swing.JDialog {

    /**
     * Creates new form VuelosCarga
     */
    boolean archivovalido=false;
    public VuelosCarga(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); 
        //generaraeropuertos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtRuta = new javax.swing.JTextField();
        btnRuta = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();
        btn_regresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FlyTrack - Vuelos - Carga");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/vuelo48x48.png"))); // NOI18N
        jLabel1.setText("Vuelos");
        jLabel1.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Seleccionar archivo");

        btnRuta.setText("...");
        btnRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRutaActionPerformed(evt);
            }
        });

        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        btn_regresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancel.png"))); // NOI18N
        btn_regresar.setText("Regresar");
        btn_regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRuta)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btn_regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRuta))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_regresar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      public  void generaraeropuertos(){
        
        
        ArrayList<XmlVuelo> listaxmlvuelos = new ArrayList<XmlVuelo>();
        
        
        Calendar calendario = Calendar.getInstance();
        calendario.set(2012, 11, 2, 8, 0);
        Date fecha = calendario.getTime();
        calendario.set(2012, 11, 2, 12, 0);
        Date fecha2 = calendario.getTime();
        
        XmlVuelo vuelo= new XmlVuelo();
        vuelo.setAlquiler(2000);
        vuelo.setCapacidadActual(0);
        vuelo.setCapacidadMax(100);
        vuelo.setDestino(23);
        vuelo.setOrigen(20);
        vuelo.setEstado(14);   
        vuelo.setFechaLlegada(fecha);
        vuelo.setFechaSalida(fecha2);
        
        listaxmlvuelos.add(vuelo);
        
        XmlVuelo vuelo2= new XmlVuelo();
        
        vuelo2.setAlquiler(2000);
        vuelo2.setCapacidadActual(0);
        vuelo2.setCapacidadMax(100);
        vuelo2.setDestino(23);
        vuelo2.setOrigen(21);
        vuelo2.setEstado(14);   
        vuelo2.setFechaLlegada(fecha);
        vuelo2.setFechaSalida(fecha2);
        
        listaxmlvuelos.add(vuelo2);
        
        XmlVuelo vuelo3= new XmlVuelo();
        
        vuelo3.setAlquiler(2000);
        vuelo3.setCapacidadActual(0);
        vuelo3.setCapacidadMax(100);
        vuelo3.setDestino(23);
        vuelo3.setOrigen(22);
        vuelo3.setEstado(14);   
        vuelo3.setFechaLlegada(fecha);
        vuelo3.setFechaSalida(fecha2);
        
        listaxmlvuelos.add(vuelo3);
        
        XmlVuelo vuelo4= new XmlVuelo();
        
        vuelo4.setAlquiler(2000);
        vuelo4.setCapacidadActual(0);
        vuelo4.setCapacidadMax(100);
        vuelo4.setDestino(23);
        vuelo4.setOrigen(4);
        vuelo4.setEstado(14);   
        vuelo4.setFechaLlegada(fecha);
        vuelo4.setFechaSalida(fecha2);
        
        listaxmlvuelos.add(vuelo4);
        
        CSerializer.serializar(listaxmlvuelos, "PruebaVuelo.xml");
        
    }
    
    
    private void btnRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRutaActionPerformed
        // TODO add your handling code here:
        
        
//        
        
        JFileChooser jfc = new JFileChooser();
        int rslt = jfc.showSaveDialog(this);
        if (rslt == JFileChooser.APPROVE_OPTION){
            String strArch = jfc.getSelectedFile().getName();
            if (!strArch.trim().isEmpty()){
                String ruta = jfc.getSelectedFile().getPath().trim();
                if (!ruta.isEmpty()){
                    try{
                        if (!ruta.endsWith(".xml")){
                            ErrorDialog.mostrarError("Debe especificar un archivo xml", this);
                        }
                        else{
                            
                            archivovalido=true;
                            txtRuta.setText(ruta);
                        }

                    }
                    catch (Exception e){
                        e.printStackTrace();
                        ErrorDialog.mostrarError("Ocurrió un error al realizar la carga.",this);
                    }
                }
                else
                ErrorDialog.mostrarError("Especifique una ruta válida para guardar el archivo",this);
            }
            else
            ErrorDialog.mostrarError("Especifique un nombre al archivo",this);
        }

    }//GEN-LAST:event_btnRutaActionPerformed

    private ArrayList<Vuelo> PasaValores(ArrayList<xmlVueloString> xmlvuelos){
        
        CParametro cparametro = new CParametro();
        CAeropuerto caeropuerto = new CAeropuerto();
        String error="";
        Integer anosal;
        Integer messal;
        Integer diasal;
        Integer horasal;
        Integer minsal;
        Integer anolle;
        Integer meslle;
        Integer dialle;
        Integer horalle;
        Integer minlle;
        
        
        ArrayList<Vuelo> listavuelos = new ArrayList<Vuelo>();
        for (Integer s=0; s<xmlvuelos.size();s++){
            
            
            if  (!CValidator.isDouble(xmlvuelos.get(s).getAlquiler()) || Double.parseDouble(xmlvuelos.get(s).getAlquiler())<=0){
                ErrorDialog.mostrarError("Monto alquiler inválido en registro "+ s.toString(), this);
                return null;
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getCapacidadMax()) || Integer.parseInt(xmlvuelos.get(s).getCapacidadMax())<=0){
                ErrorDialog.mostrarError("Capacidad máxima inválida en registro "+ s.toString(), this);
                return null;
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getCapacidadActual()) || Integer.parseInt(xmlvuelos.get(s).getCapacidadActual())<=0){
                ErrorDialog.mostrarError("Capacidad actual inválida en registro "+ s.toString(), this);
                return null;
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getAnoSal()) || Integer.parseInt(xmlvuelos.get(s).getAnoSal())<2012){
                ErrorDialog.mostrarError("Año de salida inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                anosal=Integer.parseInt(xmlvuelos.get(s).getAnoSal());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getAnoLle()) || Integer.parseInt(xmlvuelos.get(s).getAnoLle())<2012){
                ErrorDialog.mostrarError("Año de llegada inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                anolle=Integer.parseInt(xmlvuelos.get(s).getAnoLle());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getMesSal()) || Integer.parseInt(xmlvuelos.get(s).getMesSal())>12){
                ErrorDialog.mostrarError("Mes de salida inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                messal=Integer.parseInt(xmlvuelos.get(s).getMesSal());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getMesLle()) || Integer.parseInt(xmlvuelos.get(s).getMesLle())>12){
                ErrorDialog.mostrarError("Mes de llegada inválido en registro "+ s.toString(), this);
                return null;
            } 
            else{
                meslle=Integer.parseInt(xmlvuelos.get(s).getMesLle());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getDiaSal()) || Integer.parseInt(xmlvuelos.get(s).getDiaSal())>31){
                ErrorDialog.mostrarError("Día de salida inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                diasal=Integer.parseInt(xmlvuelos.get(s).getDiaSal());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getDiaLle()) || Integer.parseInt(xmlvuelos.get(s).getDiaLle())>31){
                ErrorDialog.mostrarError("Día de llegada inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                dialle=Integer.parseInt(xmlvuelos.get(s).getDiaLle());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getHoraSal()) || Integer.parseInt(xmlvuelos.get(s).getHoraSal())>23){
                ErrorDialog.mostrarError("Hora de salida inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                horasal=Integer.parseInt(xmlvuelos.get(s).getHoraSal());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getHoraLle()) || Integer.parseInt(xmlvuelos.get(s).getHoraLle())>23){
                ErrorDialog.mostrarError("Hora de llegada inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                horalle=Integer.parseInt(xmlvuelos.get(s).getHoraLle());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getMinSal()) || Integer.parseInt(xmlvuelos.get(s).getMinSal())>59){
                ErrorDialog.mostrarError("Minuto de salida inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                minsal=Integer.parseInt(xmlvuelos.get(s).getMinSal());
            }
            if  (!CValidator.isInteger(xmlvuelos.get(s).getMinLle()) || Integer.parseInt(xmlvuelos.get(s).getMinLle())>59){
                ErrorDialog.mostrarError("Minuto de llegada inválido en registro "+ s.toString(), this);
                return null;
            }
            else{
                minlle=Integer.parseInt(xmlvuelos.get(s).getMinLle());
            }
            Parametro estado= CParametro.buscarXValorUnicoyTipo("ESTADO_VUELO", xmlvuelos.get(s).getEstado());
            if (estado==null) {
                ErrorDialog.mostrarError("Estado de vuelo inválido en registro "+ s.toString(), this);
                return null;
            }
            beans.Aeropuerto aeroori= CAeropuerto.BuscarNombre(xmlvuelos.get(s).getOrigen());
            if (aeroori==null) {
                ErrorDialog.mostrarError("Aeropuerto origen inválido en registro "+ s.toString(), this);
                return null;
            }
            beans.Aeropuerto aerodes= CAeropuerto.BuscarNombre(xmlvuelos.get(s).getDestino());
            if (aerodes==null) {
                ErrorDialog.mostrarError("Aeropuerto destino inválido en registro "+ s.toString(), this);
                return null;
            }
            
            Calendar calendario = Calendar.getInstance();
            Calendar calendario2 = Calendar.getInstance();
            calendario.set(anosal, messal-1, diasal, horasal, minsal);
            Date fecha = calendario.getTime();
            calendario2.set(anolle, meslle-1, dialle, horalle, minlle);
            Date fecha2 = calendario2.getTime();
            
            if (fecha.after(fecha2)){
                ErrorDialog.mostrarError("Fecha de Salida es mahyor a la de llegada en registro "+ s.toString(), this);
                return null;
            }
            if (aeroori.getNombre().equals(aerodes.getNombre())){
                ErrorDialog.mostrarError("Aeropuerto origen no puede ser igual al aeropuerto destino en registro "+ s.toString(), this);
                return null;
            }
            
            Vuelo vuelo  = new Vuelo();
            vuelo.setAlquiler(Double.parseDouble(xmlvuelos.get(s).getAlquiler()));
            vuelo.setCapacidadActual(Integer.parseInt(xmlvuelos.get(s).getCapacidadActual()));
            vuelo.setCapacidadMax(Integer.parseInt(xmlvuelos.get(s).getCapacidadMax()));
            vuelo.setFechaLlegada(fecha2);
            vuelo.setFechaSalida(fecha);
            vuelo.setDestino(aerodes);
            vuelo.setOrigen(aeroori);
            vuelo.setEstado(estado);
            listavuelos.add(vuelo);
            
               
            
            
        }
        return listavuelos;
        
        
    }
                
    
    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        // TODO add your handling code here:
        
         setCursor(new Cursor(Cursor.WAIT_CURSOR));
        if (archivovalido){
            try{
            ArrayList<xmlVueloString> xmlvuelos=CSerializer.deserializar(txtRuta.getText());
            ArrayList<Vuelo> vuelos = PasaValores(xmlvuelos);
            
            if (vuelos!=null){
            
                 try{                   //CAeropuerto.ValidarCaga(vuelos);
                        for (int i = 0; i<vuelos.size();i++){
                            Vuelo vuelo=(beans.Vuelo)vuelos.get(i);
                            CVuelo.cargarVuelo(vuelo);
                        }
                        InformationDialog.mostrarInformacion( "La operación se realizó con éxito ", this);
                        this.dispose();
                    }
                    catch(Exception e){
                        e.printStackTrace();
                        ErrorDialog.mostrarError("Ocurrió un error al hacer la carga",this);

                    }
                }
            
            }
            catch(Exception e){
                    e.printStackTrace();
                    ErrorDialog.mostrarError("Ocurrió un error al cargar el archivo.",this);

            }
        }
        else{
            ErrorDialog.mostrarError("El archivo no es válido",this);
        }
         setCursor(new Cursor(Cursor.DEFAULT_CURSOR));

    }//GEN-LAST:event_btn_guardarActionPerformed

    private void btn_regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regresarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_regresarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VuelosCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VuelosCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VuelosCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VuelosCarga.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VuelosCarga dialog = new VuelosCarga(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRuta;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JButton btn_regresar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtRuta;
    // End of variables declaration//GEN-END:variables
}
