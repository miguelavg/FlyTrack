/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.seguridad.usuarios;

import controllers.RegexDocument;
import beans.Aeropuerto;
import beans.Cliente;
import beans.Parametro;
import beans.seguridad.Contrasena;
import beans.seguridad.Perfil;
import beans.seguridad.Usuario;
import controllers.CCliente;
import controllers.CContrasena;
import controllers.CMail;
import controllers.CParametro;
import controllers.CPerfil;
import controllers.CUsuario;
import controllers.CValidator;
import controllers.CSeguridad;
import gui.ErrorDialog;
import gui.administracion.aeropuertos.AeropuertoPopup;
import gui.clientes.ClientesPopUp;
import controllers.ExpresionesRegulares;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.util.HashSet;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.AnnotationConfiguration;

/**
 *
 * @author joao
 */
public class UsuarioEdit extends javax.swing.JDialog {

    CUsuario Usuario = new CUsuario();
    CContrasena Contrasena = new CContrasena();
    //CSeguridad seguridad=new CSeguridad();
    List<Parametro> ListaTipoDoc;
    List<Parametro> ListaEstado;
    List<Perfil> ListaPerfiles;
    List<Contrasena> ListaContrasena;
    Cliente ClienteAux;
    Aeropuerto AeropuertoAux;
    boolean isNuevo;
    boolean carga = false;
    List<Parametro> ListaCiudades;
    List<Parametro> ListaPaises;
    CCliente ClienteBL = new CCliente();
    CParametro ParametroBL = new CParametro();
    CPerfil PerfilBL = new CPerfil();
    Perfil Perfil;
    //Parametro Estado;
    /**
     * Creates new form UsuarioEdit
     */
    Integer idusuario = -1;
    Integer idcontrasena = 0;
    Usuario UsuarioBE;
    Contrasena ContrasenaAux;

    public void setIdusuario(Integer idusuario) {
        this.idusuario = idusuario;
    }

    public Integer getIdusuario() {
        return idusuario;
    }
    Integer bandera = -1;

    public void setBandera(Integer bandera) {
        this.bandera = bandera;
    }

    public Integer getBandera() {
        return bandera;
    }

    public UsuarioEdit(javax.swing.JDialog parent, boolean modal, int id) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);

        idusuario = id;
        isNuevo = true;

        llenarcomboEstado();
        llenarcomboPerfiles();
        llenarcombos();
        if (idusuario != -1) {
            cargarcampos();
            txtNumeroDoc.setEditable(false);
            this.isNuevo = false;
        } else {
            cboEstado.setSelectedIndex(1);
            lblContrasena.setVisible(false);
            psswdContrasena.setVisible(false);
        }

        if (this.isNuevo) {
            this.setTitle("FlyTrack - Seguridad -  Usuario - Crear");
        } else {
            this.setTitle("FlyTrack - Seguridad -  Usuario - Editar");
        }

    }

    @Override
    protected JRootPane createRootPane() {
        JRootPane rootPane = new JRootPane();
        KeyStroke strokeESC = KeyStroke.getKeyStroke("ESCAPE");
        Action actionListener = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                setVisible(Boolean.FALSE);
                dispose();
            }
        };
        InputMap inputMap = rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(strokeESC, "ESCAPE");
        rootPane.getActionMap().put("ESCAPE", actionListener);

        return rootPane;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAeropuerto = new javax.swing.JTextField();
        btnBuscarAeropuerto = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox();
        cboPerfil = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtLogIn = new javax.swing.JTextField();
        lblContrasena = new javax.swing.JLabel();
        psswdContrasena = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cboPais = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cboTipoDoc = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtApellidos = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        Ciudad = new javax.swing.JLabel();
        cboCiudad = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        txtNumeroDoc = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FlyTrack - Usuario");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/usuario48x48.png"))); // NOI18N
        jLabel1.setText("Usuario");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(235, 235, 235))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Perfil:");

        jLabel3.setText("Aeropuerto:");

        txtAeropuerto.setEditable(false);

        btnBuscarAeropuerto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/buscar.png"))); // NOI18N
        btnBuscarAeropuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarAeropuertoActionPerformed(evt);
            }
        });

        jLabel6.setText("Estado:");

        cboEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));

        cboPerfil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        cboPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPerfilActionPerformed(evt);
            }
        });

        jLabel7.setText("LogIn:");

        txtLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLogInActionPerformed(evt);
            }
        });

        lblContrasena.setText("Contraseña:");

        jLabel4.setText("Nombres:");

        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombrestxtNomKeyRel(evt);
            }
        });

        jLabel8.setText("Correo:");

        jLabel11.setText("País:");

        cboPais.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        cboPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPaisActionPerformed(evt);
            }
        });

        jLabel5.setText("Tipo Doc:");

        cboTipoDoc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));
        cboTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoDocActionPerformed(evt);
            }
        });

        jLabel9.setText("Apellidos:");

        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtApellidosKeyReleased(evt);
            }
        });

        jLabel10.setText("Teléfono:");

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTelefonotxtTelKeyPress(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTelefonotxtTelKeyRel(evt);
            }
        });

        Ciudad.setText("Ciudad:");

        cboCiudad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar" }));

        jLabel12.setText("Número Doc:");

        txtNumeroDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDocActionPerformed(evt);
            }
        });
        txtNumeroDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNumeroDocKeyReleased(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/cancel.png"))); // NOI18N
        btnCancelar.setText("Regresar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContrasena)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cboPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(psswdContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12)
                                    .addComponent(Ciudad))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNumeroDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(49, 49, 49))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cboPais, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cboTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnBuscarAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAeropuerto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(psswdContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblContrasena))
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cboPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ciudad)
                    .addComponent(cboCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumeroDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cboTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void cargarcampos() {

        UsuarioBE = Usuario.BuscarXid(idusuario);

        isNuevo = false;

        if (UsuarioBE.getIdAeropuerto()!=null){
        txtAeropuerto.setText(UsuarioBE.getIdAeropuerto().getNombre());
        }
        txtLogIn.setText(UsuarioBE.getLogIn());

        for (int i = 1; i < cboPerfil.getItemCount(); i++) {
            Perfil Perfil = (Perfil) cboPerfil.getItemAt(i);
            if (Perfil.getIdPerfil() == UsuarioBE.getPerfil().getIdPerfil()) {
                cboPerfil.setSelectedIndex(i);
                break;

            }
        }

        for (int i = 1; i < cboEstado.getItemCount(); i++) {
            Parametro estado = (Parametro) cboEstado.getItemAt(i);
            if (estado.getIdParametro() == UsuarioBE.getEstado().getIdParametro()) {
                cboEstado.setSelectedIndex(i);
                break;

            }
        }

        txtNombres.setText(UsuarioBE.getNombres());
        txtApellidos.setText(UsuarioBE.getApellidos());
        txtApellidos.setEditable(false);
        txtCorreo.setText(UsuarioBE.geteMail());
        txtNumeroDoc.setText(UsuarioBE.getNumDoc());
        txtTelefono.setText(UsuarioBE.getTelefono());

        cboPais.setSelectedItem(UsuarioBE.getPais());

        for (int i = 1; i < cboPais.getItemCount(); i++) {
            Parametro pais = (Parametro) cboPais.getItemAt(i);
            if (pais.getIdParametro() == UsuarioBE.getPais().getIdParametro()) {
                cboPais.setSelectedIndex(i);
                break;

            }
        }

        for (int i = 1; i < cboTipoDoc.getItemCount(); i++) {
            Parametro tipodoc = (Parametro) cboTipoDoc.getItemAt(i);
            if (tipodoc.getIdParametro() == UsuarioBE.getTipoDoc().getIdParametro()) {
                cboTipoDoc.setSelectedIndex(i);
                break;

            }
        }
        cboTipoDoc.setEnabled(false);        
    }

    public void llenarcomboEstado() {
        ListaEstado = ParametroBL.buscar("", null, "ESTADO_USUARIO", null);

        for (int i = 0; i < ListaEstado.size(); i++) {
            Parametro TipoDocBE = (Parametro) ListaEstado.get(i);
            cboEstado.addItem(TipoDocBE);
        }
    }

    public void llenarcomboPerfiles() {
        ListaPerfiles = PerfilBL.Buscar();
        for (int i = 0; i < ListaPerfiles.size(); i++) {
            Perfil CPerfil = (Perfil) ListaPerfiles.get(i);
            cboPerfil.addItem(CPerfil);
        }
    }

    public void llenarcombos() {

        ListaTipoDoc = ParametroBL.buscar(null, null, "TIPO_DOC", null);
        ListaCiudades = ParametroBL.buscar(null, null, "CIUDAD", null);
        ListaPaises = ParametroBL.buscar(null, null, "PAIS", null);


        for (int i = 0; i < ListaTipoDoc.size(); i++) {
            Parametro TipoDocBE = (Parametro) ListaTipoDoc.get(i);
            cboTipoDoc.addItem(TipoDocBE);
        }



        for (int i = 0; i < ListaPaises.size(); i++) {
            Parametro Pais = (Parametro) ListaPaises.get(i);
            cboPais.addItem(Pais);
        }

        cboPais.setSelectedIndex(0);
        carga = true;

    }

    private String validarcampos() {
        String error_message = "";

        if (txtNombres.getText().isEmpty() || txtApellidos.getText().isEmpty() || txtCorreo.getText().isEmpty()
                || txtTelefono.getText().isEmpty() || txtNumeroDoc.getText().isEmpty()
                || cboCiudad.getSelectedIndex() == 0 || cboPais.getSelectedIndex() == 0 || cboTipoDoc.getSelectedIndex() == 0) {

            error_message = error_message + CValidator.buscarError("ERROR_FT001") + "\n";

        } else {


            if (idusuario == -1) {

                error_message = error_message + Usuario.ValidarDocumento((Parametro) cboTipoDoc.getSelectedItem(), txtNumeroDoc.getText());
            }

            if (CValidator.esAlfanumerico(txtNombres.getText())) {

                error_message = "El nombre es inválido";

            }

            if (CValidator.esAlfanumerico(txtApellidos.getText())) {

                error_message = "El Apellido es inválido";

            }

        }
        return error_message;
    }

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        String mensaje = "";        
        
        //validar que ha elegido un perfil
        if(cboPerfil.getSelectedIndex() == 0)
            mensaje += "No ha seleccionado un perfil. Seleccione uno\n";
        //validar que ha elegido un estado
        if(cboEstado.getSelectedIndex() == 0)
            mensaje += "No ha seleccionado un estado. Seleccione uno\n";
        //validar que ha elegido un aeropuerto
        if(txtAeropuerto.getText().isEmpty())
            mensaje += "No ha seleccionado un aeropuerto. Seleccione uno\n";
        //validar que ha puesto un login
        if(txtLogIn.getText().isEmpty()){
            mensaje += "No ha ingresado un LogIn.\n";
        }
        else{
            //validar que el login puesto no exista por otro usuario
            Usuario usuario = CUsuario.buscarXNombreUsuario(txtLogIn.getText());
            if(usuario != null){
                if(idusuario == -1){//Creando
                    mensaje += "El LogIn ingresado ya existe.\n";
                }
                else{//Modificando
                    if (usuario.getIdUsuario() != idusuario){ //el usuario que tiene el mismo username no es el mismo
                        mensaje += "El LogIn ingresado ya existe.\n";
                    }
                }
            }
            
        }
        //validar que nombres no este vacio
        if(txtNombres.getText().isEmpty())
            mensaje += "No ha ingresado nombres.\n";
        //validar que apellidos no este vacio
        if(txtApellidos.getText().isEmpty())
            mensaje += "No ha ingresado apellidos.\n";
        //validar que el correo no este vacio
        if(txtCorreo.getText().isEmpty()){
            mensaje += "No ha ingresado correo electrónico.\n";
        }
        else if(!CValidator.validarEmail(txtCorreo.getText())){
            mensaje += "El correo electrónico ingresado no es válido.\n";
        }
        //validar que el telefonoo no este vacio
        if(txtTelefono.getText().isEmpty()){
            mensaje += "No ha ingresado telefono.\n";
        }
        else if(!CValidator.isInteger(txtTelefono.getText())){
            mensaje += "El telefono ingresado no es valido.\n";
        }
        //validar que haya elegido un pais
        if(cboPais.getSelectedIndex() == 0)
            mensaje += "No ha elegido un pais.\n";
        //validar que haya elegido una ciudad
        if(cboCiudad.getSelectedIndex() == 0)
            mensaje += "No ha elegido un pais.\n";
        //validar que haya elegido un tipodoc
        if(cboTipoDoc.getSelectedIndex() == 0)
            mensaje += "No ha elegido un pais.\n";
        //validar que haya puesto un num doc
        if(txtNumeroDoc.getText().isEmpty()){
            mensaje += "No ha ingresado numero de documento.\n";
        }
        else if(!CValidator.isInteger(txtNumeroDoc.getText())){
            mensaje += "El numero de documento ingresado no es valido.\n";
        }
        //si se trata de modificar, validar que la pass cumpla los requisitos
        if(idusuario != -1 && psswdContrasena.getPassword().length != 0)
            mensaje += CSeguridad.validarContrasenaConMensaje(psswdContrasena.getPassword(), idusuario);
        
        if(mensaje.isEmpty()){ //Cumple todas las validaciones
            if(idusuario != -1){ 
                //Modificando usuario
                Usuario usuario = new CUsuario().
                    modificarUsuario(idusuario, (Perfil) cboPerfil.getSelectedItem(), AeropuertoAux, txtLogIn.getText(), //cuidado con AeropuertoAux
                                    (Parametro) cboEstado.getSelectedItem(), txtNombres.getText(), txtApellidos.getText(), 
                                    txtCorreo.getText(), txtTelefono.getText(), txtNumeroDoc.getText(), 
                                    (Parametro) cboTipoDoc.getSelectedItem(), (Parametro) cboCiudad.getSelectedItem(), 
                                    (Parametro) cboPais.getSelectedItem());
                if(usuario != null && psswdContrasena.getPassword().length != 0){
                    //Desactivar la contrasena activa del usuario
                    Contrasena contrasenaActiva = CSeguridad.getContrasenaActiva(idusuario);
                    CContrasena.desactivarContrasena(contrasenaActiva);
                    //Agregar la contrasena nueva como activa al usuario
                    CContrasena.agregarContrasenaActiva(psswdContrasena.getPassword(), usuario);
                    //Mando el correo
                    new CMail().sendMail("flytrack.no.reply@gmail.com",
                                        "manuelmanuel", 
                                        usuario.geteMail(),
                                        "[FlyTrack] Modificar contraseña",
                                        "Estimado usuario " + usuario.getLogIn() + " .\n\nSu contraseña ha sido modificada: " + 
                                        new String(psswdContrasena.getPassword()) + ".\n\nSoporte FlyTrack.");
                }
            }
            else{ 
                //Creando usuario
                Usuario usuario = new CUsuario().
                    agregarUsuarioNuevo((Perfil) cboPerfil.getSelectedItem(), AeropuertoAux, txtLogIn.getText(), 
                                        (Parametro) cboEstado.getSelectedItem(), txtNombres.getText(), txtApellidos.getText(), 
                                        txtCorreo.getText(), txtTelefono.getText(), txtNumeroDoc.getText(), 
                                        (Parametro) cboTipoDoc.getSelectedItem(), (Parametro) cboCiudad.getSelectedItem(), 
                                        (Parametro) cboPais.getSelectedItem());
                if(usuario != null){
                    //Creando contrasena
                    char[] contrasenaNueva = CSeguridad.generaContraseniaAleatoria();
                    CContrasena.agregarContrasenaActiva(contrasenaNueva, usuario);
                    //Mando el correo
                    new CMail().sendMail("flytrack.no.reply@gmail.com", 
                                        "manuelmanuel", 
                                        usuario.geteMail(), 
                                        "[Flytrack] Contraseña por defecto", 
                                        "Bienvenido a FlyTrack " + usuario.getLogIn() + " . \n\nSu contraseña de acceso es la siguiente :" + 
                                        new String(contrasenaNueva) + "\n\nSi Ud. no solicitado crear una cuenta en FlyTrack, omita este mensaje. "+
                                        "\n\nSoporte Flytrack.");
                }
            }
            this.setVisible(false);
            this.dispose();
        }
        else{
            ErrorDialog.mostrarError(mensaje, this);
        }
        
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLogInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogInActionPerformed

    private void btnBuscarAeropuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarAeropuertoActionPerformed
        // TODO add your handling code here:
        AeropuertoPopup usuarioAeropuertoPopUp = new AeropuertoPopup(this, true);
        //usuarioAeropuertoPopUp.setVisible(true);
        AeropuertoAux = usuarioAeropuertoPopUp.showDialog();
        if (AeropuertoAux != null) {
            txtAeropuerto.setText(AeropuertoAux.getNombre());
        } else {
            txtAeropuerto.setText("");
        }
    }//GEN-LAST:event_btnBuscarAeropuertoActionPerformed

    private void cboPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPerfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboPerfilActionPerformed

    private void txtNombrestxtNomKeyRel(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombrestxtNomKeyRel
        //TODO add your handling code here:
//        char letra=evt.getKeyChar();
//        if (!CValidator.validarSoloLetrasYEspacio(letra, txtNombres)){
//            getToolkit().beep();
//        }
    }//GEN-LAST:event_txtNombrestxtNomKeyRel

    private void cboPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPaisActionPerformed
        // TODO add your handling code here:


        if (cboPais.getSelectedIndex() != 0) {
            cboCiudad.removeAllItems();

            cboCiudad.addItem("Seleccionar");
            ListaCiudades = ListaPaises.get(cboPais.getSelectedIndex() - 1).getHijos();
            for (int i = 0; i < ListaCiudades.size(); i++) {
                Parametro TipoDocBE = (Parametro) ListaCiudades.get(i);

                cboCiudad.addItem(TipoDocBE);
            }

            if (carga && idusuario != -1) {
                for (int i = 1; i < cboCiudad.getItemCount(); i++) {
                    Parametro ciudad = (Parametro) cboCiudad.getItemAt(i);
                    if (ciudad.getIdParametro() == UsuarioBE.getCiudad().getIdParametro()) {
                        cboCiudad.setSelectedIndex(i);
                        break;

                    }
                }
            }
        }
    }//GEN-LAST:event_cboPaisActionPerformed

    private void txtTelefonotxtTelKeyPress(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonotxtTelKeyPress
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonotxtTelKeyPress

    private void txtTelefonotxtTelKeyRel(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonotxtTelKeyRel
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (!CValidator.validarSoloNumeros(letra, txtTelefono)) {
            getToolkit().beep();
        }

    }//GEN-LAST:event_txtTelefonotxtTelKeyRel

    private void cboTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoDocActionPerformed

    private void txtNumeroDocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroDocKeyReleased
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (!CValidator.validarSoloNumeros(letra, txtNumeroDoc)) {
            getToolkit().beep();
        }


    }//GEN-LAST:event_txtNumeroDocKeyReleased

    private void txtApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyReleased
        // TODO add your handling code here:
        char letra = evt.getKeyChar();
        if (!CValidator.validarSoloLetrasYEspacio(letra, txtNombres)) {
            getToolkit().beep();
        }
    }//GEN-LAST:event_txtApellidosKeyReleased

    private void txtNumeroDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDocActionPerformed
    public int showDialog() {
        setVisible(true);
        return 1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UsuarioEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UsuarioEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UsuarioEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UsuarioEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UsuarioEdit dialog = new UsuarioEdit(new javax.swing.JDialog(), true, -1);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Ciudad;
    private javax.swing.JButton btnBuscarAeropuerto;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cboCiudad;
    private javax.swing.JComboBox cboEstado;
    private javax.swing.JComboBox cboPais;
    private javax.swing.JComboBox cboPerfil;
    private javax.swing.JComboBox cboTipoDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblContrasena;
    private javax.swing.JPasswordField psswdContrasena;
    private javax.swing.JTextField txtAeropuerto;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtLogIn;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNumeroDoc;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
